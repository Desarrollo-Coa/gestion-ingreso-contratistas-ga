<!DOCTYPE html>
<html lang="es">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title><%= title %></title>
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">
  <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css" rel="stylesheet">
 
  <style>
    .container-interventor {
      margin: 10px;
    }
    .interventor {
      padding-left: 20px;
    }
    .c-sesion {
      padding-right: 20px;
    }
    .table-responsive {
      height: 70vh;
    }
  </style>
</head>
<body>
  <nav class="navbar navbar-expand-lg navbar-dark bg-dark">
    <a class="navbar-brand interventor" href="#">Interventor GA - <%= username %></a>
    <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
      <span class="navbar-toggler-icon"></span>
    </button>
    <div class="collapse navbar-collapse" id="navbarNav">
      <ul class="navbar-nav ml-auto">
        <li class="nav-item">
          <a class="navbar-brand c-sesion" href="/logout">Cerrar sesión</a>
        </li>
      </ul>
    </div>
  </nav>

  <div class="container-interventor">
    <h1 class="text-center mb-4">Solicitud Ingreso Contratistas</h1>

    <!-- Botón para mostrar/ocultar filtros -->
    <button class="btn btn-secondary mb-3" type="button" data-bs-toggle="collapse" data-bs-target="#filtrosCollapse" aria-expanded="true" aria-controls="filtrosCollapse">
      <span id="toggleText">Ocultar Filtros</span>
    </button>

    <!-- Contenedor colapsable para el formulario -->
    <div class="collapse show" id="filtrosCollapse">
      <form id="filtrosForm" class="mb-4">
        <!-- Filtros Principales -->
        <div class="row">
          <div class="col-md-3">
            <label for="filtroId">ID Solicitud</label>
            <input type="text" class="form-control" id="filtroId" placeholder="ID">
          </div>
          <div class="col-md-3">
            <label for="filtroCedula">Cédula Colaborador</label>
            <input type="text" class="form-control" id="filtroCedula" placeholder="Cédula">
          </div>
          <div class="col-md-3">
            <label for="filtroInterventor">Interventor</label>
            <input type="text" class="form-control" id="filtroInterventor" placeholder="Interventor">
          </div>
          <div class="col-md-3">
            <label for="filtroEstado">Estado</label>
            <select class="form-control" id="filtroEstado">
              <option value="">Todos los estados</option>
              <option value="aprobada">Pendiente Ingreso</option>
              <option value="en labor">En Labor</option>
              <option value="labor detenida">Labor Detenida</option>
              <option value="pendiente">Pendiente</option>
            </select>
          </div>
        </div>

        <!-- Filtros Secundarios -->
        <div class="row mt-2">
          <div class="col-md-3">
            <label for="filtroFechaInicio">Fecha Inicio</label>
            <input type="date" class="form-control" id="filtroFechaInicio">
          </div>
          <div class="col-md-3">
            <label for="filtroFechaFin">Fecha Fin</label>
            <input type="date" class="form-control" id="filtroFechaFin">
          </div>
          <div class="col-md-3">
            <label for="filtroNit">NIT</label>
            <input type="text" class="form-control" id="filtroNit" placeholder="NIT">
          </div>
          <div class="col-md-3">
            <label for="filtroEmpresa">Empresa</label>
            <input type="text" class="form-control" id="filtroEmpresa" placeholder="Empresa">
          </div>
        </div>

 <!-- Actualizar el botón para mostrar tablas -->
<button class="btn btn-primary mb-3" type="button" data-bs-toggle="modal" data-bs-target="#tablasModal">
  Mostrar Datos Estadísticos
</button>

        <!-- Filtros Adicionales y Botón -->
        <div class="row mt-2">
          <div class="col-md-3">
            <label for="filtroLugar">Lugar</label>
            <select class="form-control" id="filtroLugar">
              <option value="">Todos los lugares</option>
              <% lugares.forEach(lugar => { %>
                <option value="<%= lugar %>"><%= lugar %></option>
              <% }); %>
            </select>
          </div>
          <div class="col-md-3">
            <label for="filtroVigencia">Vigencia</label>
            <select class="form-control" id="filtroVigencia">
              <option value="">Todas</option>
              <option value="Vigente">Vigente</option>
              <option value="Vencida">Vencida</option>
            </select>
          </div>
          <div class="col-md-3 d-flex align-items-end">
            <button type="button" class="btn btn-primary w-100" id="filtrarBtn">Filtrar</button>
          </div>
        </div>
      </form>
    </div>

    <div class="table-responsive">
      <table class="table table-bordered table-striped table-hover shadow-sm rounded" id="tablaSolicitudes">
        <thead class="thead-dark">
          <tr>
            <th>Id</th>
            <th>Empresa</th>
            <th>NIT</th>
            <th>Inicio de Obra</th>
            <th>Fin de Obra</th>
            <th>Lugar</th>
            <th>Labor</th>
            <th>Estado de la Solicitud</th>
            <th>Interventor</th>
            <th>Vigencia</th>
            <th>Acción</th>
            <% if (username === "COA") { %>
              <th>Eliminar</th>
            <% } %>
            <th>Ver QR</th>
            <th>Detalles</th>
            <% if (username === "COA") { %>
              <th>H. de Ingresos</th>
            <% } %>
          </tr>
        </thead>
        <tbody>
          <% if (acciones.length > 0) { %>
            <% acciones.forEach(accion => { %>
              <tr>
                <td class="solicitud-id"><%= accion.solicitud_id %></td>
                <td><%= accion.empresa %></td>
                <td><%= accion.nit %></td>
                <td><%= accion.inicio_obra %></td>
                <td><%= accion.fin_obra %></td>
                <td><%= accion.lugar %></td>
                <td><%= accion.labor %></td>
                <td>
                  <% if (accion.solicitud_estado === 'aprobada' && accion.solicitud_estado_interventor === 'pendiente') { %>
                    <span class="badge bg-success">Aprobado por SST</span>
                  <% } else if (accion.solicitud_estado === 'aprobada' && accion.solicitud_estado_interventor === 'aprobada') { %>
                    <span class="badge bg-info">Pendiente Ingreso</span>
                  <% } else if (accion.solicitud_estado === 'pendiente') { %>
                    <span class="badge bg-warning">Pendiente</span>
                  <% } else if (accion.solicitud_estado === 'negada') { %>
                    <span class="badge bg-danger">Negada</span>
                  <% } else if (accion.solicitud_estado === 'en labor') { %>
                    <span class="badge bg-primary">En Labor</span>
                  <% } else if (accion.solicitud_estado === 'labor detenida') { %>
                    <span class="badge bg-secondary">Labor Detenida</span>
                  <% } else { %>
                    <span class="badge bg-secondary"><%= accion.solicitud_estado %></span>
                  <% } %>
                </td>
                <td><%= accion.interventor %></td>
                <td><%= accion.estado_vigencia %></td>
                <td>
                  <% if (accion.accion === 'pendiente' && accion.estado_vigencia === 'Vigente') { %>
                    <% if (accion.puede_aprobar === 'Aprobar') { %>
                      <button class="btn btn-success btn-sm" id="aprobarBtn-<%= accion.solicitud_id %>">Aprobar</button>
                    <% } else { %>
                      <span class="badge bg-warning">Pendiente de Aprobación</span>
                    <% } %>
                  <% } else if (accion.accion === 'pendiente' && accion.estado_vigencia === 'Vencida') { %>
                    <span class="badge bg-danger">No Aprobada - Vencida</span>
                  <% } else if (accion.accion === 'aprobada' && (accion.solicitud_estado === 'en labor' || accion.solicitud_estado === 'aprobada') && accion.estado_vigencia === 'Vigente') { %>
                    <button class="btn btn-danger text-white bg-red-600 hover:bg-red-700 py-2 px-4 rounded-md text-xs" onclick="manejarLabor(<%= accion.solicitud_id %>, this, 'detener')">Detener Labor</button>
                  <% } else if (accion.accion === 'aprobada' && accion.solicitud_estado === 'en labor' && accion.estado_vigencia === 'Vencida') { %>
                    <span class="badge bg-danger">En Labor - Vencida</span>
                  <% } else if (accion.accion === 'aprobada' && accion.solicitud_estado === 'labor detenida' && accion.estado_vigencia === 'Vigente') { %>
                    <button class="btn btn-success text-white bg-green-600 hover:bg-green-700 py-2 px-4 rounded-md text-xs" onclick="manejarLabor(<%= accion.solicitud_id %>, this, 'reanudar')">Reanudar Labor</button>
                  <% } else if (accion.accion === 'aprobada' && accion.solicitud_estado === 'labor detenida' && accion.estado_vigencia === 'Vencida') { %>
                    <span class="badge bg-danger">Labor Detenida - Vencida</span>
                  <% } else if (accion.accion === 'aprobada' && accion.solicitud_estado === 'aprobada' && accion.estado_vigencia === 'Vencida') { %>
                    <span class="badge bg-danger">Aprobada - Vencida</span>
                  <% } else if (accion.accion === 'negada') { %>
                    <span class="badge bg-danger">Negada<%= accion.estado_vigencia === 'Vencida' ? ' - Vencida' : '' %></span>
                  <% } else { %>
                    <span class="badge bg-secondary">Estado Desconocido</span>
                  <% } %>
                </td>
                <% if (username === "COA") { %>
                  <td>
                    <button class="btn btn-danger btn-sm eliminar-solicitud" data-solicitud-id="<%= accion.solicitud_id %>">Eliminar</button>
                  </td>
                <% } %>
                <td>
                  <% if (accion.puede_ver_qr === 'Ver QR' && accion.estado_vigencia !== 'Vencida') { %>
                    <button class="btn btn-info btn-sm" id="verQR-<%= accion.solicitud_id %>">Ver QR</button>
                  <% } else { %>
                    <span class="badge bg-danger">No disponible</span>
                  <% } %>
                </td>
                <td>
                  <button class="btn btn-info btn-sm" id="verDETALLES-<%= accion.solicitud_id %>">Ver</button>
                </td>
                <% if (username === "COA") { %>
                  <td>
                    <button class="btn btn-info btn-sm ver-historial" data-solicitud-id="<%= accion.solicitud_id %>">Ver Historial</button>
                  </td>
                <% } %>
              </tr>
            <% }); %>
          <% } else { %>
            <tr>
              <td colspan="<%= username === 'COA' ? 14 : 13 %>" class="text-center">No hay acciones para revisar.</td>
            </tr>
          <% } %>
        </tbody>
      </table>
    </div>
  </div>


  <div class="modal fade" id="historialModal" tabindex="-1" aria-labelledby="historialModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="historialModalLabel">Historial de Ingresos y Salidas</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body">
          <table class="table">
            <thead>
              <tr>
                <th>Colaborador</th>
                <th>Empresa</th>
                <th>NIT</th>
                <th>Tipo</th>
                <th>Lugar</th>
                <th>Usuario Registro</th> <!-- Nueva columna -->
                <th>H. Registro</th>
                <th>Fecha y Hora</th>
                <th>Estado</th>
              </tr>
            </thead>
            <tbody id="historialTableBody"></tbody>
          </table>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-success" id="descargarUnicoExcel">Descargar Historial Único (Excel)</button>
          <button type="button" class="btn btn-primary" id="descargarGlobalExcel">Descargar Historial Global (Excel)</button>
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cerrar</button>
        </div>
      </div>
    </div>
  </div>

  
  <!-- Modal para Tablas -->
<div class="modal fade" id="tablasModal" tabindex="-1" aria-labelledby="tablasModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-xl">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="tablasModalLabel">Datos Estadísticos</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <div class="row">
          <div class="col-md-4">
            <div class="mb-2">
              <h6>Solicitudes por Puesto</h6>
              <div class="d-flex gap-2">
                <select class="form-select" id="yearSolicitudes">
                  <option value="">Todos los años</option>
                </select>
                <select class="form-select" id="monthSolicitudes">
                  <option value="">Todos los meses</option>
                  <option value="1">Enero</option>
                  <option value="2">Febrero</option>
                  <option value="3">Marzo</option>
                  <option value="4">Abril</option>
                  <option value="5">Mayo</option>
                  <option value="6">Junio</option>
                  <option value="7">Julio</option>
                  <option value="8">Agosto</option>
                  <option value="9">Septiembre</option>
                  <option value="10">Octubre</option>
                  <option value="11">Noviembre</option>
                  <option value="12">Diciembre</option>
                </select>
              </div>
            </div>
            <table class="table table-bordered" id="solicitudesPorPuestoTable">
              <thead>
                <tr>
                  <th>Lugar</th>
                  <th>Cantidad</th>
                </tr>
              </thead>
              <tbody></tbody>
            </table>
          </div>
          <div class="col-md-4">
            <div class="mb-2">
              <h6>Colaboradores por Contratista</h6>
              <div class="d-flex gap-2">
                <select class="form-select" id="yearColaboradores">
                  <option value="">Todos los años</option>
                </select>
                <select class="form-select" id="monthColaboradores">
                  <option value="">Todos los meses</option>
                  <option value="1">Enero</option>
                  <option value="2">Febrero</option>
                  <option value="3">Marzo</option>
                  <option value="4">Abril</option>
                  <option value="5">Mayo</option>
                  <option value="6">Junio</option>
                  <option value="7">Julio</option>
                  <option value="8">Agosto</option>
                  <option value="9">Septiembre</option>
                  <option value="10">Octubre</option>
                  <option value="11">Noviembre</option>
                  <option value="12">Diciembre</option>
                </select>
              </div>
            </div>
            <table class="table table-bordered" id="colaboradoresPorContratistaTable">
              <thead>
                <tr>
                  <th>Contratista</th>
                  <th>Cantidad</th>
                </tr>
              </thead>
              <tbody></tbody>
            </table>
          </div>
          <div class="col-md-4">
            <div class="mb-2">
              <h6>Solicitudes por Interventor</h6>
              <div class="d-flex gap-2">
                <select class="form-select" id="yearInterventores">
                  <option value="">Todos los años</option>
                </select>
                <select class="form-select" id="monthInterventores">
                  <option value="">Todos los meses</option>
                  <option value="1">Enero</option>
                  <option value="2">Febrero</option>
                  <option value="3">Marzo</option>
                  <option value="4">Abril</option>
                  <option value="5">Mayo</option>
                  <option value="6">Junio</option>
                  <option value="7">Julio</option>
                  <option value="8">Agosto</option>
                  <option value="9">Septiembre</option>
                  <option value="10">Octubre</option>
                  <option value="11">Noviembre</option>
                  <option value="12">Diciembre</option>
                </select>
              </div>
            </div>
            <table class="table table-bordered" id="solicitudesPorInterventorTable">
              <thead>
                <tr>
                  <th>Interventor</th>
                  <th>Cantidad</th>
                </tr>
              </thead>
              <tbody></tbody>
            </table>
          </div>
        </div>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cerrar</button>
      </div>
    </div>
  </div>
</div>
   
  <div class="modal fade" id="modalVerQR" tabindex="-1" role="dialog" aria-labelledby="modalVerQRLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
      <div class="modal-content shadow-lg rounded">
        <div class="modal-header">
          <h5 class="modal-title" id="modalVerQRLabel">Ver QR</h5>
          <button type="button" class="close" data-bs-dismiss="modal" aria-label="Cerrar"><span aria-hidden="true">×</span></button>
        </div>
        <div class="modal-body text-center">
          <div id="qr-container"></div>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cerrar</button>
        </div>
      </div>
    </div>
  </div>

  <div class="modal fade" id="modalVerDetalles" tabindex="-1" role="dialog" aria-labelledby="modalVerDetallesLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg" role="document">
      <div class="modal-content shadow-lg rounded">
        <div class="modal-header">
          <h5 class="modal-title" id="modalVerDetallesLabel">Detalles de la Solicitud</h5>
          <button type="button" class="close" data-bs-dismiss="modal" aria-label="Cerrar"><span aria-hidden="true">×</span></button>
        </div>
        <div class="modal-body" id="detalles-container"></div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cerrar</button>
        </div>
      </div>
    </div>
  </div>

  <div class="modal fade" id="modalVerFoto" tabindex="-1" role="dialog" aria-labelledby="modalVerFotoLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg" role="document">
      <div class="modal-content shadow-lg rounded">
        <div class="modal-header">
          <h5 class="modal-title" id="modalVerFotoLabel">Foto Ampliada</h5>
          <button type="button" class="close" data-bs-dismiss="modal" aria-label="Cerrar"><span aria-hidden="true">×</span></button>
        </div>
        <div class="modal-body text-center">
          <img id="fotoAmpliada" src="" alt="Foto Ampliada" class="img-fluid">
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cerrar</button>
        </div>
      </div>
    </div>
  </div>
 
  <!-- Scripts -->
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
  <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css" rel="stylesheet">
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.3.1/dist/js/bootstrap.bundle.min.js"></script>
  <script>
    const username = '<%= username %>';
    console.log('[DEBUG] Username recibido en el frontend:', username);

    $(document).ready(function () {
      reasignarEventos(); // Initial event assignment
    });

    async function manejarAprobar(btn) {
      const solicitudId = btn.id.replace('aprobarBtn-', '');
      const confirmacion = await Swal.fire({
        title: '¿Estás seguro?',
        text: 'Esta acción aprobará la solicitud.',
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#3085d6',
        cancelButtonColor: '#d33',
        confirmButtonText: 'Sí, aprobar',
        cancelButtonText: 'Cancelar',
      });

      if (!confirmacion.isConfirmed) return;

      try {
        const response = await fetch('/aprobar-solicitud-interventor', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ solicitudId }),
        });

        if (response.ok) {
          await Swal.fire('¡Éxito!', 'La solicitud ha sido aprobada.', 'success');
          window.location.reload();
        } else {
          Swal.fire('Error', 'Hubo un problema al aprobar la solicitud.', 'error');
        }
      } catch (error) {
        console.error('[ERROR] Error al aprobar:', error);
        Swal.fire('Error', 'Ocurrió un error al realizar la solicitud.', 'error');
      }
    }

    async function manejarVerQR(btn) {
      const solicitudId = btn.id.replace('verQR-', '');
      try {
        const response = await fetch(`/generar-qr/${solicitudId}`);
        if (response.ok) {
          const qrData = await response.json();
          document.getElementById('qr-container').innerHTML = `<img src="${qrData.qrUrl}" alt="QR Code" class="img-fluid">`;
          $('#modalVerQR').modal('show');
        } else {
          Swal.fire('Error', 'No se pudo obtener el QR para esta solicitud', 'error');
        }
      } catch (error) {
        console.error('[ERROR] Error al obtener el QR:', error);
        Swal.fire('Error', 'Hubo un error al obtener el QR.', 'error');
      }
    }

    async function manejarVerDetalles(btn) {
      const solicitudId = btn.id.replace('verDETALLES-', '');
      try {
        const response = await fetch(`/obtener-detalles-solicitud/${solicitudId}`);
        if (response.ok) {
          const detalles = await response.json();
          const detallesContainer = document.getElementById('detalles-container');
          detallesContainer.innerHTML = `
            <style>
              body { font-family: Arial, sans-serif; margin: 50px; }
              .header { text-align: center; margin-bottom: 20px; }
              .header img { width: 100px; }
              .header h1 { margin: 0; font-size: 24px; }
              .header p { margin: 0; font-size: 14px; color: #666; }
              .section { margin-bottom: 20px; }
              .section h2 { font-size: 18px; border-bottom: 2px solid #000; padding-bottom: 5px; }
              .section p { margin: 5px 0; }
              .table { width: 100%; border-collapse: collapse; margin-top: 10px; }
              .table th, .table td { border: 1px solid #000; padding: 8px; text-align: left; }
              .table th { background-color: #f2f2f2; }
              .table img { width: 100px; height: 100px; object-fit: cover; border: 1px solid #ccc; border-radius: 8px; }
            </style>
            <div class="header">
              <img src="${detalles.logoBase64}" alt="Logo">
              <h1>Informe de Solicitud</h1>
              <p>Sistema Gestor de Ingreso Contratistas</p>
              <p>Documento generado el día: ${detalles.fecha}</p>
            </div>
            <div class="section">
              <h2>Detalles de la Solicitud</h2>
              <p><strong>Id de la Solicitud:</strong> ${detalles.solicitud.id || '❌'}</p>
              <p><strong>Empresa:</strong> ${detalles.solicitud.empresa || '❌'}</p>
              <p><strong>NIT:</strong> ${detalles.solicitud.nit || '❌'}</p>
              <p><strong>Lugar:</strong> ${detalles.solicitud.lugar || '❌'}</p>
              <p><strong>Labor:</strong> ${detalles.solicitud.labor || '❌'}</p>
              <p><strong>Contratista:</strong> ${detalles.contractorName || '❌'}</p>
              <p><strong>Interventor:</strong> ${detalles.interventorName || '❌'}</p>
              <p><strong>Fechas:</strong> ${detalles.solicitud.inicio_obra || '❌'} - ${detalles.solicitud.fin_obra || '❌'}</p>
              <p><strong>ARL:</strong> ${detalles.solicitud.arl_documento ? '✅' : '❌'}</p>
              <p><strong>Planilla de Pago Seguridad Social:</strong> ${detalles.solicitud.pasocial_documento ? '✅' : '❌'}</p>
            </div>
            <div class="section">
              <h2>Colaboradores</h2>
              <table class="table">
                <thead>
                  <tr>
                    <th>Cédula</th>
                    <th>Nombre</th>
                    <th>Fotos</th>
                  </tr>
                </thead>
                <tbody>
                  ${detalles.colaboradores.map(colaborador => `
                    <tr>
                      <td>${colaborador.cedula || '❌'}</td>
                      <td>${colaborador.nombre || '❌'}</td>
                      <td>
                        ${colaborador.foto ? '✅' : '❌'} Foto
                        <br>
                        ${colaborador.foto ? `<img src="${colaborador.foto}" alt="Foto del colaborador" class="foto-colaborador" data-foto="${colaborador.foto}" style="cursor: pointer;">` : ''}
                        <br>
                        ${colaborador.cedulaFoto ? '✅' : '❌'} Cédula
                        <br>
                        ${colaborador.cedulaFoto ? `<img src="${colaborador.cedulaFoto}" alt="Foto de la cédula" class="foto-cedula" data-foto="${colaborador.cedulaFoto}" style="cursor: pointer;">` : ''}
                      </td>
                    </tr>
                  `).join('')}
                </tbody>
              </table>
            </div>
          `;
          $('#modalVerDetalles').modal('show');

          document.querySelectorAll('.foto-colaborador').forEach(foto => {
            foto.addEventListener('click', () => {
              document.getElementById('fotoAmpliada').src = foto.getAttribute('data-foto');
              $('#modalVerFoto').modal('show');
            });
          });
          document.querySelectorAll('.foto-cedula').forEach(foto => {
            foto.addEventListener('click', () => {
              document.getElementById('fotoAmpliada').src = foto.getAttribute('data-foto');
              $('#modalVerFoto').modal('show');
            });
          });
        } else {
          Swal.fire('Error', 'No se pudieron obtener los detalles de la solicitud', 'error');
        }
      } catch (error) {
        console.error('[ERROR] Error al obtener los detalles:', error);
        Swal.fire('Error', 'Hubo un error al obtener los detalles de la solicitud.', 'error');
      }
    }

    async function manejarLabor(solicitudId, button, accion) {
      try {
        const mensajeConfirmacion = accion === 'detener' ? '¿Está seguro de que desea detener la labor?' : '¿Está seguro de que desea reanudar la labor?';
        const result = await Swal.fire({
          title: 'Confirmar acción',
          text: mensajeConfirmacion,
          icon: 'warning',
          showCancelButton: true,
          confirmButtonText: 'Sí, continuar',
          cancelButtonText: 'Cancelar',
        });

        if (!result.isConfirmed) return;

        button.disabled = true;
        button.innerHTML = 'Procesando...';

        const endpoint = accion === 'detener' ? `/solicitudes/${solicitudId}/detener-labor` : `/solicitudes/${solicitudId}/reanudar-labor`;
        const response = await fetch(endpoint, { method: 'PUT', headers: { 'Content-Type': 'application/json' } });

        if (response.ok) {
          document.location.reload();
        } else {
          const errorData = await response.json();
          Swal.fire('Error al procesar la solicitud', errorData.message || 'No se pudo procesar la solicitud.', 'error');
        }
      } catch (err) {
        Swal.fire('Error de conexión', 'Ocurrió un error al intentar procesar la solicitud.', 'error');
        console.error('[ERROR] Error al intentar manejar la labor:', err);
      } finally {
        button.disabled = false;
        button.innerHTML = accion === 'detener' ? 'Detener Labor' : 'Reanudar Labor';
      }
    }

    document.getElementById('filtrarBtn').addEventListener('click', async function () {
      const filtros = {
        id: document.getElementById('filtroId').value.trim(),
        cedula: document.getElementById('filtroCedula').value.trim(),
        interventor: document.getElementById('filtroInterventor').value.trim(),
        estado: document.getElementById('filtroEstado').value,
        fechaInicio: document.getElementById('filtroFechaInicio').value,
        fechaFin: document.getElementById('filtroFechaFin').value,
        nit: document.getElementById('filtroNit').value.trim(),
        empresa: document.getElementById('filtroEmpresa').value.trim(),
        lugar: document.getElementById('filtroLugar').value,
        vigencia: document.getElementById('filtroVigencia').value, // New vigencia filter
      };

      try {
        const response = await fetch('/filtrar-solicitudes', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify(filtros),
        });

        if (response.ok) {
          let solicitudesFiltradas = await response.json();
          
          // Apply client-side vigencia filter
          if (filtros.vigencia) {
            solicitudesFiltradas = solicitudesFiltradas.filter(accion => accion.estado_vigencia === filtros.vigencia);
          }

          actualizarTabla(solicitudesFiltradas);
        } else {
          Swal.fire('Error', 'No se pudieron filtrar las solicitudes.', 'error');
        }
      } catch (error) {
        console.error('[ERROR] Error al filtrar:', error);
        Swal.fire('Error', 'Hubo un error al realizar el filtrado.', 'error');
      }
    });

    document.getElementById('descargarUnicoExcel').addEventListener('click', function () {
      const solicitudId = document.querySelector('#historialModal').dataset.solicitudId;
      if (solicitudId) {
        window.location.href = `/descargar-excel-unico/${solicitudId}`;
      } else {
        Swal.fire('Error', 'No se encontró el ID de la solicitud.', 'error');
      }
    });

    document.getElementById('descargarGlobalExcel').addEventListener('click', function () {
      window.location.href = '/descargar-excel-global';
    });

    function manejarVerHistorial(btn) {
  const solicitudId = btn.getAttribute('data-solicitud-id');
  fetch(`/obtener-historial/${solicitudId}`)
    .then(response => response.json())
    .then(data => {
      const tableBody = document.getElementById('historialTableBody');
      tableBody.innerHTML = '';
      data.forEach(registro => {
        const row = document.createElement('tr');
        row.innerHTML = `
          <td>${registro.nombre_colaborador}</td>
          <td>${registro.empresa}</td>
          <td>${registro.nit}</td>
          <td>${registro.tipo}</td>
          <td>${registro.lugar}</td>
          <td>${registro.usuario_registro}</td> <!-- Nueva columna -->
          <td>${registro.registro_hecho}</td>
          <td>${registro.fecha_hora}</td>
          <td>${registro.estado_actual}</td>
        `;
        tableBody.appendChild(row);
      });
      const modal = document.getElementById('historialModal');
      modal.dataset.solicitudId = solicitudId;
      new bootstrap.Modal(modal).show();
    })
    .catch(error => console.error('[ERROR] Error al obtener el historial:', error));
}

    function actualizarTabla(acciones) {
  console.log('[DEBUG] Entrando en actualizarTabla con acciones:', acciones);
  const tbody = document.querySelector('#tablaSolicitudes tbody');
  tbody.innerHTML = '';

  if (acciones.length > 0) {
    acciones.forEach(accion => {
      console.log('[DEBUG] Procesando acción:', accion);
      const row = document.createElement('tr');
      row.innerHTML = `
        <td class="solicitud-id">${accion.solicitud_id}</td>
        <td>${accion.empresa}</td>
        <td>${accion.nit}</td>
        <td>${accion.inicio_obra}</td>
        <td>${accion.fin_obra}</td>
        <td>${accion.lugar}</td>
        <td>${accion.labor}</td>
        <td>
          ${accion.solicitud_estado === 'aprobada' && accion.solicitud_estado_interventor === 'pendiente' ?
            `<span class="badge bg-success">Aprobado por SST</span>` :
            (accion.solicitud_estado === 'aprobada' && accion.solicitud_estado_interventor === 'aprobada' ?
              `<span class="badge bg-info">Pendiente Ingreso</span>` :
              (accion.solicitud_estado === 'pendiente' ?
                `<span class="badge bg-warning">Pendiente</span>` :
                (accion.solicitud_estado === 'negada' ?
                  `<span class="badge bg-danger">Negada</span>` :
                  (accion.solicitud_estado === 'en labor' ?
                    `<span class="badge bg-primary">En Labor</span>` :
                    (accion.solicitud_estado === 'labor detenida' ?
                      `<span class="badge bg-secondary">Labor Detenida</span>` :
                      `<span class="badge bg-secondary">${accion.solicitud_estado}</span>`)))))
          }
        </td>
        <td>${accion.interventor}</td>
        <td>${accion.estado_vigencia}</td>
        <td>
          ${accion.accion === 'pendiente' && accion.estado_vigencia === 'Vigente' ?
            (accion.puede_aprobar === 'Aprobar' ?
              `<button class="btn btn-success btn-sm" id="aprobarBtn-${accion.solicitud_id}">Aprobar</button>` :
              `<span class="badge bg-warning">Pendiente de Aprobación</span>`) :
            (accion.accion === 'pendiente' && accion.estado_vigencia === 'Vencida' ?
              `<span class="badge bg-danger">No Aprobada - Vencida</span>` :
              (accion.accion === 'aprobada' && (accion.solicitud_estado === 'en labor' || accion.solicitud_estado === 'aprobada') && accion.estado_vigencia === 'Vigente' ?
                `<button class="btn btn-danger text-white bg-red-600 hover:bg-red-700 py-2 px-4 rounded-md text-xs" onclick="manejarLabor(${accion.solicitud_id}, this, 'detener')">Detener Labor</button>` :
                (accion.accion === 'aprobada' && accion.solicitud_estado === 'en labor' && accion.estado_vigencia === 'Vencida' ?
                  `<span class="badge bg-danger">En Labor - Vencida</span>` :
                  (accion.accion === 'aprobada' && accion.solicitud_estado === 'labor detenida' && accion.estado_vigencia === 'Vigente' ?
                    `<button class="btn btn-success text-white bg-green-600 hover:bg-green-700 py-2 px-4 rounded-md text-xs" onclick="manejarLabor(${accion.solicitud_id}, this, 'reanudar')">Reanudar Labor</button>` :
                    (accion.accion === 'aprobada' && accion.solicitud_estado === 'labor detenida' && accion.estado_vigencia === 'Vencida' ?
                      `<span class="badge bg-danger">Labor Detenida - Vencida</span>` :
                      (accion.accion === 'aprobada' && accion.solicitud_estado === 'aprobada' && accion.estado_vigencia === 'Vencida' ?
                        `<span class="badge bg-danger">Aprobada - Vencida</span>` :
                        (accion.accion === 'negada' ?
                          `<span class="badge bg-danger">Negada${accion.estado_vigencia === 'Vencida' ? ' - Vencida' : ''}</span>` :
                          `<span class="badge bg-secondary">Estado Desconocido</span>`)))))))
          }
        </td>
        ${username === "COA" ? `
          <td>
            <button class="btn btn-danger btn-sm eliminar-solicitud" data-solicitud-id="${accion.solicitud_id}">Eliminar</button>
          </td>` : ''}
        <td>
          ${accion.puede_ver_qr === 'Ver QR' && accion.estado_vigencia !== 'Vencida' ?
            `<button class="btn btn-info btn-sm" id="verQR-${accion.solicitud_id}">Ver QR</button>` :
            `<span class="badge bg-danger">No disponible</span>`}
        </td>
        <td>
          <button class="btn btn-info btn-sm" id="verDETALLES-${accion.solicitud_id}">Ver</button>
        </td>
        ${username === "COA" ? `
          <td>
            <button class="btn btn-info btn-sm ver-historial" data-solicitud-id="${accion.solicitud_id}">Ver Historial</button>
          </td>` : ''}
      `;
      tbody.appendChild(row);
    });
  } else {
    console.log('[DEBUG] No hay acciones para mostrar');
    tbody.innerHTML = `<tr><td colspan="${username === "COA" ? 14 : 13}" class="text-center">No hay acciones para revisar.</td></tr>`;
  }
  console.log('[DEBUG] Tabla actualizada, reasignando eventos');
  reasignarEventos();
}
    function reasignarEventos() {
      console.log('[DEBUG] Reasignando eventos');
      document.querySelectorAll('[id^="aprobarBtn-"]').forEach(btn => {
        btn.addEventListener('click', () => manejarAprobar(btn));
        console.log('[DEBUG] Evento asignado a aprobarBtn:', btn.id);
      });
      document.querySelectorAll('[id^="verQR-"]').forEach(btn => {
        btn.addEventListener('click', () => manejarVerQR(btn));
        console.log('[DEBUG] Evento asignado a verQR:', btn.id);
      });
      document.querySelectorAll('[id^="verDETALLES-"]').forEach(btn => {
        btn.addEventListener('click', () => manejarVerDetalles(btn));
        console.log('[DEBUG] Evento asignado a verDETALLES:', btn.id);
      });
      document.querySelectorAll('.ver-historial').forEach(btn => {
        btn.addEventListener('click', () => manejarVerHistorial(btn));
        console.log('[DEBUG] Evento asignado a ver-historial:', btn.getAttribute('data-solicitud-id'));
      });
      document.querySelectorAll('.eliminar-solicitud').forEach(btn => {
        btn.addEventListener('click', function () {
          const solicitudId = this.getAttribute('data-solicitud-id');
          Swal.fire({
            title: '¿Estás seguro?',
            text: 'Esta acción eliminará la solicitud y todos los archivos asociados. No se puede deshacer.',
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#d33',
            cancelButtonColor: '#3085d6',
            confirmButtonText: 'Sí, eliminar',
            cancelButtonText: 'Cancelar'
          }).then((result) => {
            if (result.isConfirmed) {
              $.ajax({
                url: '/eliminar-solicitud',
                method: 'POST',
                data: { solicitud_id: solicitudId },
                success: function (response) {
                  Swal.fire('Eliminado!', 'La solicitud ha sido eliminada correctamente.', 'success').then(() => {
                    window.location.reload();
                  });
                },
                error: function (xhr) {
                  Swal.fire('Error!', 'No se pudo eliminar la solicitud: ' + xhr.responseText, 'error');
                }
              });
            }
          });
        });
        console.log('[DEBUG] Evento asignado a eliminar-solicitud:', btn.getAttribute('data-solicitud-id'));
      });
    }

    function llenarSelectoresAño() {
    const currentYear = new Date().getFullYear();
    const startYear = 2020; // Ajusta según tus necesidades
    
    const selectores = ['yearSolicitudes', 'yearColaboradores', 'yearInterventores'];
    selectores.forEach(selectorId => {
      const select = document.getElementById(selectorId);
      for (let year = currentYear; year >= startYear; year--) {
        const option = document.createElement('option');
        option.value = year;
        option.text = year;
        select.appendChild(option);
      }
    });
  }

  async function cargarDatosTablas() {
    try {
      const yearSolicitudes = document.getElementById('yearSolicitudes').value;
      const monthSolicitudes = document.getElementById('monthSolicitudes').value;
      const yearColaboradores = document.getElementById('yearColaboradores').value;
      const monthColaboradores = document.getElementById('monthColaboradores').value;
      const yearInterventores = document.getElementById('yearInterventores').value;
      const monthInterventores = document.getElementById('monthInterventores').value;

      const params = new URLSearchParams();
      if (yearSolicitudes) params.append('yearSolicitudes', yearSolicitudes);
      if (monthSolicitudes) params.append('monthSolicitudes', monthSolicitudes);
      if (yearColaboradores) params.append('yearColaboradores', yearColaboradores);
      if (monthColaboradores) params.append('monthColaboradores', monthColaboradores);
      if (yearInterventores) params.append('yearInterventores', yearInterventores);
      if (monthInterventores) params.append('monthInterventores', monthInterventores);

      const url = `/obtener-datos-tablas${params.toString() ? '?' + params.toString() : ''}`;
      const response = await fetch(url, {
        method: 'GET',
        headers: { 'Content-Type': 'application/json' },
      });

      if (!response.ok) {
        throw new Error('Error al obtener datos de tablas');
      }

      const datos = await response.json();

      // Actualizar tabla de solicitudes por puesto
      const solicitudesBody = document.querySelector('#solicitudesPorPuestoTable tbody');
      solicitudesBody.innerHTML = '';
      datos.solicitudesPorPuesto.forEach(item => {
        const row = document.createElement('tr');
        row.innerHTML = `
          <td>${item.lugar}</td>
          <td>${item.cantidad}</td>
        `;
        solicitudesBody.appendChild(row);
      });

      // Actualizar tabla de colaboradores por contratista
      const colaboradoresBody = document.querySelector('#colaboradoresPorContratistaTable tbody');
      colaboradoresBody.innerHTML = '';
      datos.colaboradoresPorContratista.forEach(item => {
        const row = document.createElement('tr');
        row.innerHTML = `
          <td>${item.contratista}</td>
          <td>${item.cantidad}</td>
        `;
        colaboradoresBody.appendChild(row);
      });

      // Actualizar tabla de solicitudes por interventor
      const interventoresBody = document.querySelector('#solicitudesPorInterventorTable tbody');
      interventoresBody.innerHTML = '';
      datos.solicitudesPorInterventor.forEach(item => {
        const row = document.createElement('tr');
        row.innerHTML = `
          <td>${item.interventor}</td>
          <td>${item.cantidad}</td>
        `;
        interventoresBody.appendChild(row);
      });

    } catch (error) {
      console.error('Error al cargar datos de tablas:', error);
      Swal.fire('Error', 'No se pudieron cargar los datos estadísticos.', 'error');
    }
  }

  // Configurar eventos
  $('#tablasModal').on('shown.bs.modal', function () {
    llenarSelectoresAño();
    cargarDatosTablas();

    // Eventos para todos los selectores
    $('#yearSolicitudes, #monthSolicitudes, #yearColaboradores, #monthColaboradores, #yearInterventores, #monthInterventores').on('change', function() {
      cargarDatosTablas();
    });
  });
  </script>
</body>
</html>